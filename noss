

return(function(Pv,rv,mv,Hv,Iv,Gv,Uv,Sv,qv,Qv,lv,Cv,Yv,ov,iv,ev,hv,Lv,zv,Kv,T_,dv,gv,pv,Fv,Ov,Wv,bv,Xv,uv,Mv,Dv,fv,Rv,Zv,yv,wv,vv,jv,Bv,Ev,...)local a,t=nil,(nil);local s,A,s_=Fv,pcall,(1);while"'\079"do if s_==0x0 then t=iv;break;else a=lv;do s_=0X0;end;end;end;local r,k=1,tonumber;local c,V=gv,(ov.rep);local l,G=qv,dv or Ev;do s_=0X0;end;local j,J=nil,(nil);do while s_<2 do if s_~=0 then J=Gv;s_=0X02;else j=Pv;s_=0X1;end;end;end;local N,F=uv,(ov.gsub);local o=(rawget);do s_=0X2;end;local P,h,b=nil,nil,(nil);while s_<4 do do if not(s_<=0X0001)then if s_~=0X2 then s_=0X000;else do P=hv;end;do s_=0x03;end;end;else if s_~=0 then b=(h and h()or rv);s_=0X4;else h=bv;s_=1;end;end;end;end;do s_=6;end;local I,C,x,w,e=nil,nil,nil,nil,(nil);repeat do if s_<=0X02 then if not(s_<=0)then if s_~=0X1 then e=function()local YS=N(j,r,r);r=r+1;return YS;end;break;else s_=0x0004;end;else do C=I-1;end;s_=5;end;elseif not(s_<=4)then if s_~=5 then I=0X100000000;do s_=0;end;else s_=0X3;end;else do if s_~=3 then do j=F(t(j,0X005),"..",function(SS)if N(SS,2)~=72 then local GB,UB=1,nil;while GB<0X2 do if GB==0 then do if w then local tb=nil;for zO=0X00000,0x2 do if not(zO<=0)then do if zO~=1 then return tb;else do w=jv;end;end;end;else tb=V(UB,w);end;end;else return UB;end;end;GB=0x00002;else UB=x(k(SS,0X10));do GB=0X0;end;end;end;else local vx=(1);while(true)do if vx~=0 then w=k(t(SS,1,1));vx=0;else return"";end;end;end;end);end;s_=0x0002;else x=ov.char;s_=0X1;end;end;end;end;until false;s_=1;local U,B,E,v=nil,nil,nil,(nil);while s_<=0X3 do if not(s_<=0x0001)then do if s_==0x02 then do B=function()local Ep,qp,Lp,yp=nil,nil,nil,(nil);for v8=0x00000,0X02 do if v8<=0x0000 then Ep,qp,Lp,yp=N(j,r,r+0X3);else if v8~=0X1 then return yp*16777216+Lp*65536+qp*0X100+Ep;else r=r+0x00004;end;end;end;end;end;s_=0X0;else v=0X2^52;s_=0x4;end;end;elseif s_==0x0 then E=wv;s_=0X3;else U=0X000080000000;do s_=2;end;end;end;local D=({[0x00]=1});local d,M=next,(U-Bv);local O=({2,Uv,Yv});local i=ev.insert;local tv={};local u=setfenv;s_=3;local Z,z,L,Q=nil,nil,nil,nil;do while s_<5 do do if not(s_<=1)then if not(s_<=2)then if s_==3 then do local XX=(0);local wX=nil;while XX~=2 do if XX~=0 then for WZ=Bv,31 do local NZ=(0X0);do while NZ~=0X2 do do if NZ==0 then do D[WZ]=wX;end;NZ=1;else wX=wX*2;NZ=0x002;end;end;end;end;end;XX=2;else wX=0X00002;do XX=1;end;end;end;end;do s_=4;end;else Z=function(Py,Vy,ey)local ly=((Py/D[Vy])%D[ey]);do ly=ly-ly%0X1;end;return ly;end;s_=0X2;end;else z=function()local du,Nu=B(),(B());if Nu>=U then Nu=Nu-I;end;return Nu*I+du;end;s_=0X00001;end;else do if s_~=0 then do L={[0]={[0]=0,0x1,2,0X0003,4,0x5,0X6,7,0X8,0X009,0x0000A,11,Iv,vv,0Xe,15},{[0]=1,0,3,2,0X00005,0X00004,0x0007,0X6,9,0x0008,0X000b,10,13,0XC,15,0x0e},{[0X00]=0x00002,0X3,0x0,1,0x6,0x7,0X4,5,10,0Xb,0X00008,0x9,0X00E,0x000f,0Xc,0xD},{[0]=Cv,Mv,1,0x0,0x07,6,Uv,4,11,10,0X9,8,15,0X00E,0xD,12},{[0]=4,5,0X6,7,0X0,1,0X2,0X3,0xc,13,0XE,15,0x8,0X00009,0X0a,11},{[0]=0x5,4,Dv,6,Bv,Zv,Cv,2,13,12,15,0Xe,0X9,zv,11,10},{[0]=6,0x7,Yv,0X00005,2,0x03,0,0X1,14,0X0F,12,0X0D,0x0000A,11,8,0X9},{[0X0]=0X0007,Qv,5,4,3,2,0X1,0X0,0XF,14,0x000D,12,11,10,0X9,8},{[0]=0x08,0x0009,10,0XB,0XC,13,14,15,0x0,Bv,0x2,3,Yv,0X00005,0X6,Dv},{[0]=Lv,8,0x00b,0XA,13,0XC,0XF,14,0X01,0,3,0X2,5,Yv,7,6},{[0X0000]=0Xa,0Xb,0X8,0X0009,fv,Wv,12,0XD,2,3,0X0,1,6,7,4,5},{[0X0000]=0X0000b,0Xa,9,8,15,0X0E,0Xd,Iv,3,2,0X1,0,0X7,0X6,0X05,4},{[0]=12,13,14,15,8,0X9,0Xa,0XB,0X4,0X5,Qv,7,0X0000,1,2,3},{[0]=0X0000D,0X0c,0x000f,14,0x00009,8,0X0000B,0X0000a,5,0X4,7,0X6,0x00001,0X000,0x00003,2},{[0]=0X000e,15,12,13,0Xa,11,8,9,6,7,0X4,5,2,3,0,1},{[0X00]=15,14,13,0Xc,11,0xa,0X00009,8,0X7,0X6,0X5,0X4,3,0X2,1,0x000}};end;s_=0X00000;else Q=function()local iX=B();local CX=(B());local cX,RX,EX,zX,wX=1,nil,nil,nil,nil;do while cX<0X006 do if not(cX<=0X0002)then do if cX<=3 then wX=Z(CX,0,20)*I+iX;cX=0X0002;else if cX==4 then do RX=(-1)^Z(CX,pv,0X1);end;cX=5;else EX=Z(CX,0X000014,11);cX=0;end;end;end;else if cX<=0 then zX=0X1;cX=3;else if cX==0X1 then if iX==0 and CX==0 then return 0;end;cX=4;else if EX==0X0000 then if wX==0X0 then return RX*0;else EX=0X1;do zX=0x0;end;end;elseif EX~=0X7FF then else if wX==0X000 then return RX*(0X000/0);else return RX*(Bv/0X0);end;end;cX=6;end;end;end;end;end;return RX*(0X2^(EX-1023))*(wX/v+zX);end;s_=0X5;end;end;end;end;end;end;local f=((bit or Sv));local g=(setmetatable);local W=(f and f[Xv]or function(Zg,Rg)do Zg=Zg%I;end;local Hg,Pg=nil,nil;do for nP=0X0,4 do if nP<=1 then if nP==0 then Hg=1;else Rg=Rg%I;end;else if nP<=2 then Pg=0X0;else do if nP~=0X003 then return Pg+Zg*Hg+Rg*Hg;else while Zg>0 and Rg>0X00000 do local kY,eY=0x000,(nil);local uY=Zg%0X00010;while kY~=5 do if kY<=1 then if kY~=0X0 then Pg=Pg+L[uY][eY]*Hg;do kY=0X02;end;else eY=Rg%yv;kY=1;end;else do if kY<=2 then Zg=(Zg-uY)/16;kY=3;else do if kY~=0X3 then do Hg=Hg*0X00010;end;kY=5;else do Rg=(Rg-eY)/16;end;do kY=0X4;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end);local p=(f and f.band or function(Wc,Fc)local oc=(0X0);do while true do if oc<=0x0 then do Wc=Wc%I;end;oc=0x1;else do if oc~=0X001 then do return((Wc+Fc)-W(Wc,Fc))/2;end;else do Fc=Fc%I;end;oc=2;end;end;end;end;end;end);local av=({});local S=(f and f.bor or function(E7,G7)local e7=0X2;do repeat if not(e7<=0)then if e7~=1 then do E7=E7%I;end;e7=0X0001;else G7=G7%I;e7=0X0;end;else return C-p(C-E7,C-G7);end;until false;end;end);local y=(f and f[Hv]or function(pn)return C-(pn%I);end);s_=0X0001;local H,R,K,m=nil,nil,nil,(nil);do while s_<6 do if s_<=0X02 then if s_<=0x00 then do H=H or function(ZQ,rQ)for Gz=0,0X1 do if Gz==0 then if rQ>=32 then return 0;end;else if not(rQ<0)then else do return R(ZQ,-rQ);end;end;end;end;return(ZQ*D[rQ])%I;end;end;do s_=4;end;else if s_~=1 then do R=f and f.rshift;end;s_=0;else H=f and f.lshift;s_=0x2;end;end;else if s_<=3 then do K=function()local Qi,Yi=0,(0X0000);do while true do local qq=(N(j,r,r));do r=r+1;end;Qi=S(Qi,H(p(qq,0X7F),Yi));if p(qq,0X80)==0 then return Qi;end;Yi=Yi+0X7;end;end;end;end;do s_=0X5;end;else do if s_==0X4 then R=R or function(WT,DT)local lT=(nil);local JT=(0X0);while(true)do do if not(JT<=1)then do if JT~=0x2 then return lT-lT%0X001;else do lT=(WT%I/D[DT]);end;JT=3;end;end;else if JT~=0 then if DT<0 then return H(WT,-DT);end;JT=0X0002;else if not(DT>=0X00020)then else return 0x0;end;do JT=0X1;end;end;end;end;end;end;do s_=3;end;else m={[9]=0X6,[0X8]=7,[0X08]=0X00009,[Lv]=1,[0x00004]=1,[Zv]=3,[0X03]=Mv,[0X2]=0x00007,[0X3]=2,[0x5]=0X6};do s_=0X6;end;end;end;end;end;end;end;local Tv=function()local O1,v1=0X2,(nil);repeat if O1<=0X0 then if v1>M then return v1-I;end;O1=0X1;else if O1~=0X00001 then v1=K();O1=0;else return v1;end;end;until false;end;local sv=e();local kv=e();do s_=1;end;local Av,nv=nil,nil;while 503201230 do if s_==0 then nv=function(...)do return s("#",...),{...};end;end;do break;end;else Av=function(AM)local pM={N(j,r,r+0X03)};local LM,GM=nil,nil;for JH=0,0X1 do do if JH==0x00 then LM=W(pM[1],kv);else GM=W(pM[2],kv);end;end;end;local fM=(W(pM[0X3],kv));local HM=(nil);local IM=3;repeat do if IM<=1 then if IM~=0X0000 then do r=r+0X4;end;IM=0;else return HM*0X00001000000+fM*65536+GM*0x100+LM;end;else do if IM~=0X02 then do HM=W(pM[0X0004],kv);end;IM=2;else kv=(197*kv+AM)%Rv;IM=1;end;end;end;end;until(false);end;s_=0;end;end;local cv=function(Rc)local Vc,Kc=nil,nil;local Bc=(0);repeat if not(Bc<=0x0001)then if Bc~=0X002 then for nq=0X1,Vc,0X1F3D do local yq=(nq+0x0001F3d-1);if not(yq>Vc)then else yq=Vc;end;local xq=({N(j,r+nq-0X1,r+yq-0X1)});for TI=0X1,#xq do local GI=(0x1);repeat if GI~=0x0 then do xq[TI]=W(xq[TI],sv);end;GI=0X00;else sv=(Rc*sv+67)%0X100;GI=0X002;end;until GI>1;end;do Kc=Kc..x(G(xq));end;end;Bc=2;else r=r+Vc;break;end;else if Bc~=0X0000 then Kc="";Bc=3;else do Vc=B();end;Bc=1;end;end;until false;return Kc;end;local q=(rawset);do s_=0;end;local Jv=(nil);while s_<=0X0001 do if s_==0x000 then Jv=0X0001;s_=1;else do s_=0X2;end;end;end;local function Nv(O2,M2,L2)local t2=M2[0X8];local V2,D2=M2[0X1],M2[0X3];local n2=(M2[5]);local J2,v2=M2[7],M2[0X2];local a2=M2[9];local q2=g({},{__mode="v"});local B2=M2[6];local A2=(nil);if B2~=1 then A2=function(...)local bx,Px=0,{};local nx=((h and h()or _ENV));local Tx=1;local Zx,gx=nv(...);do Zx=Zx-0X1;end;for V4=0,Zx do do if not(J2>V4)then break;else Px[V4]=gx[V4+1];end;end;end;tv[0x001]=M2;do(tv)[0x2]=Px;end;local hx=((nx==b and L2 or nx));if not a2 then gx=nil;else if t2 then(Px)[J2]={n=Zx>=J2 and Zx-J2+1 or 0,G(gx,J2+0X1,Zx+0X01)};end;end;if hx~=nx then if u then u(A2,hx);else _ENV=hx;end;end;while 0.12028856774670738 do local sF=(V2[Tx]);local kF=sF[0X3];do Tx=Tx+1;end;if not(kF>=47)then if kF<0X17 then if not(kF<0XB)then if not(kF<0X0011)then if not(kF<20)then if not(kF>=21)then(Px)[sF[2]]=Px[sF[5]]<=Px[sF[4]];else if kF==0X16 then local AL,PL=sF[2],(sF[5]);if PL~=0X0 then bx=AL+PL-0X001;end;local OL=(sF[4]);local ZL,nL=nil,(nil);if PL~=1 then do ZL,nL=nv(Px[AL](G(Px,AL+0x1,bx)));end;else do ZL,nL=nv(Px[AL]());end;end;if OL==0X0001 then do bx=AL-0X1;end;else if OL==0 then ZL=ZL+AL-0x1;do bx=ZL;end;else do ZL=AL+OL-2;end;bx=ZL+0X1;end;local BT=0;do for Z_=AL,ZL do BT=BT+0X01;do Px[Z_]=nL[BT];end;end;end;end;else(Px)[sF[0X2]]=false;end;end;else if not(kF<18)then do if kF~=19 then local v0=sF[2];local b0=E(function(...)P();for xF,BF in...do(P)(true,xF,BF);end;end);b0(Px[v0],Px[v0+1],Px[v0+2]);bx=v0;(Px)[v0]=b0;Tx=sF[0X5];else(Px)[sF[0x002]]={G({},0X1,sF[0X5])};end;end;else Px[sF[0x2]]=Px[sF[5]]/sF[0x1];end;end;else if not(kF>=0x000E)then if kF>=12 then do if kF~=0xd then do(Px)[sF[2]]=Px[sF[5]][sF[0X00001]];end;else if sF[4]~=106 then(Px)[sF[0X2]]=Px[sF[0X5]];else Tx=Tx-0X00001;do V2[Tx]={[2]=(sF[2]-0X09a),[5]=(sF[5]-154),[3]=73};end;end;end;end;else local UO=sF[2];local oO,WO,EO=Px[UO]();if not(oO)then else(Px)[UO+1]=WO;(Px)[UO+2]=EO;Tx=sF[0X5];end;end;else do if kF>=15 then if kF==16 then if sF[0x4]~=0X0000dd then do(Px)[sF[0X0002]]=not Px[sF[5]];end;else Tx=Tx-0X001;do V2[Tx]={[5]=(sF[5]-151),[0X3]=40,[0X2]=(sF[0X02]-0X97)};end;end;else Px[sF[2]]=p(Px[sF[5]],Px[sF[4]]);end;else local ps=sF[0x00002];Px[ps]=Px[ps](Px[ps+1],Px[ps+2]);do bx=ps;end;end;end;end;end;else if not(kF>=5)then if not(kF>=0X2)then if kF==0x00001 then Px[sF[0X2]]=Px[sF[5]]>=Px[sF[4]];else local MD=(sF[2]);local KD=(Px[MD+2]);local wD,HD=Px[MD],Px[MD+1];do(Px)[MD]=E(function()for H8=wD,HD,KD do P(true,H8);end;end);end;Tx=sF[5];end;else do if not(kF<3)then do if kF~=0X4 then do(Px[sF[2]])[Px[sF[0X5]]]=sF[0X1];end;else do Px[sF[2]][sF[6]]=sF[0X1];end;end;end;else local aW=sF[2];(Px)[aW]=Px[aW](G(Px,aW+0X1,bx));bx=aW;end;end;end;else if kF<0x8 then if not(kF<6)then if kF==7 then Px[sF[0X2]][sF[0X6]]=Px[sF[4]];else(Px)[sF[2]]=Px[sF[0X5]]<Px[sF[4]];end;else Px[sF[2]]=Px[sF[5]]~=Px[sF[4]];end;else do if not(kF<0x009)then do if kF~=0XA then local r3=sF[5];Px[sF[0X2]]=Px[r3]..Px[r3+1];else if not(sF[6]<Px[sF[4]])then Tx=sF[0X2];end;end;end;else(Px)[sF[0X2]]=Px[sF[5]]/Px[sF[4]];end;end;end;end;end;else if kF>=35 then do if kF>=41 then if not(kF<0X2C)then if kF<0X002d then local Pb=(sF[2]);local mb,Hb=Px[Pb]();do if mb then Tx=sF[5];do Px[Pb+3]=Hb;end;end;end;else if kF~=0X02e then local zr=(sF[2]);local qr,gr=Px[zr]();if not(qr)then else do for xi=0X0001,sF[0X4]do Px[zr+xi]=gr[xi];end;end;Tx=sF[0X0005];end;else do Px[sF[0x2]]=H(Px[sF[0X00005]],Px[sF[0x004]]);end;end;end;else if kF<0X02a then do(Px[sF[2]])[Px[sF[5]]]=Px[sF[0x0004]];end;else if kF==43 then(Px)[sF[0X2]]=y(Px[sF[0X00005]]);else do(Px)[sF[2]]=Px[sF[0X00005]]*sF[0X01];end;end;end;end;else do if kF>=0X000026 then if kF<39 then Px[sF[0x0002]]=hx[sF[6]];else do if kF~=40 then do(hx)[sF[0X06]]=Px[sF[0X0002]];end;else do repeat local Kz,pz=q2,Px;if not(#Kz>0X0)then else local So=({});for zk,lk in d,Kz do do for n7,c7 in d,lk do if not(c7[1]==pz and c7[2]>=0X0)then else local zg=(c7[0X2]);if not(not So[zg])then else(So)[zg]={pz[zg]};end;do c7[1]=So[zg];end;c7[0X2]=0x1;end;end;end;end;end;until true;end;local rH=sF[2];return G(Px,rH,rH+sF[0X5]-0X2);end;end;end;else if kF>=0X24 then if kF==37 then if not(Px[sF[5]]<Px[sF[4]])then Tx=sF[2];end;else local Je=sF[0x0002];bx=Je+sF[5]-0x1;(Px)[Je]=Px[Je](G(Px,Je+1,bx));bx=Je;end;else(Px)[sF[0X2]]=nil;end;end;end;end;end;else if kF>=0X1d then if not(kF<32)then do if kF>=0X21 then if kF==34 then repeat local AR,lR=q2,(Px);if not(#AR>0X0000)then else local eD={};for Cj,Vj in d,AR do for Y4,o4 in d,Vj do if o4[0X1]==lR and o4[0X2]>=0X0 then local EI=o4[0X00002];if not eD[EI]then(eD)[EI]={lR[EI]};end;(o4)[1]=eD[EI];(o4)[0X2]=0X1;end;end;end;end;until true;local rC=(sF[0X2]);return Px[rC](G(Px,rC+0x1,bx));else local C1=O2[sF[5]];(Px)[sF[2]]=C1[1][C1[2]];end;else do(Px)[sF[2]]={};end;end;end;else do if not(kF>=30)then local aT=(sF[0x2]);Px[aT]=Px[aT](Px[aT+0X1]);bx=aT;else do if kF~=31 then do Px[sF[2]]=sF[0X6];end;else local Cf=(D2[sF[0X00005]]);local Mf,ef=Cf[4],nil;local kf=(#Mf);if not(kf>0)then else ef={};for Ik=1,kf do local sk=Mf[Ik];if sk[1]==0X00 then do ef[Ik-0x01]={Px,sk[2]};end;else ef[Ik-1]=O2[sk[2]];end;end;(i)(q2,ef);end;do(Px)[sF[0X2]]=Nv(ef,Cf,hx);end;end;end;end;end;end;else if kF>=0x00001a then do if not(kF<27)then do if kF~=28 then do bx=sF[2];end;Px[bx]();bx=bx-0X0001;else if sF[4]==174 then do Tx=Tx-0X1;end;V2[Tx]={[0X2]=(sF[0X2]-102),[0X3]=0X0000d,[0x5]=(sF[5]-0X66)};else do Px[sF[0x2]]=gx[J2+1];end;end;end;end;else Px[sF[2]]=Px[sF[5]]^Px[sF[4]];end;end;else if not(kF>=24)then if sF[0X4]==0X000F0 then Tx=Tx-0X1;do V2[Tx]={[2]=(sF[2]-0X0E3),[5]=(sF[5]-227),[3]=0X000038};end;else local Ne=(sF[2]);for ar=Ne,Ne+(sF[0X5]-0x00001)do(Px)[ar]=gx[J2+(ar-Ne)+0x1];end;end;else if kF~=25 then local JL=sF[0X2];local HL=E(function(...)(P)();for NF,zF,dF,AF,ZF,lF,jF,MF,DF,xF in...do(P)(true,{NF,zF,dF,AF,ZF,lF,jF,MF,DF,xF});end;end);HL(Px[JL],Px[JL+0X1],Px[JL+2]);bx=JL;Px[JL]=HL;Tx=sF[0X5];else Px[sF[2]]=Px[sF[5]]+Px[sF[0X00004]];end;end;end;end;end;end;else if not(kF>=0X0047)then do if kF<0x3B then if not(kF<53)then do if kF<56 then if kF<0X36 then if not(Px[sF[2]])then else Tx=sF[0X5];end;else do if kF==0X037 then if Px[sF[0X05]]==Px[sF[4]]then else do Tx=sF[0x0002];end;end;else if Px[sF[5]]~=sF[1]then else Tx=sF[2];end;end;end;end;else do if kF<0X00039 then(Px)[sF[0X002]]=-Px[sF[5]];else if kF==0X00003A then local XE=(sF[2]);local aE,JE=Px[XE]();if not(aE)then else(Px)[XE+1]=JE;Tx=sF[5];end;else do(Px)[sF[2]]=Px[sF[0X00005]]%Px[sF[0X4]];end;end;end;end;end;end;else if not(kF>=50)then if kF<48 then local Ni=(sF[2]);(Px[Ni])(Px[Ni+1],Px[Ni+2]);bx=Ni-0X1;else if kF==0x031 then do Px[sF[2]]=true;end;else do if sF[4]==0X7 then Tx=Tx-1;(V2)[Tx]={[0X2]=(sF[0X02]-0X00B9),[5]=(sF[0X0005]-185),[0X00003]=13};else local dA=(sF[2]);local VA=(Zx-J2);if not(VA<0X0)then else VA=-1;end;do for t7=dA,dA+VA do(Px)[t7]=gx[J2+(t7-dA)+1];end;end;bx=dA+VA;end;end;end;end;else if not(kF>=0X33)then Px[sF[2]]=Px[sF[5]][Px[sF[4]]];else if kF==52 then Px[sF[0x2]]=Px[sF[5]]%sF[0X1];else do Px[sF[2]]=S(Px[sF[0x00005]],Px[sF[0x04]]);end;end;end;end;end;else do if kF<0X41 then if kF<62 then do if not(kF<0X3c)then do if kF~=0X003D then Px[sF[2]]=R(Px[sF[5]],Px[sF[0x004]]);else bx=sF[0x2];do(Px)[bx]=Px[bx]();end;end;end;else if Px[sF[5]]==Px[sF[0X004]]then do Tx=sF[0X0002];end;end;end;end;else do if kF<0X03F then if not(not(Px[sF[0X005]]<=sF[1]))then else Tx=sF[2];end;else do if kF==0x40 then Px[sF[2]]=Px[sF[0X05]]*Px[sF[4]];else local MT=(sF[2]);Px[MT](Px[MT+1]);bx=MT-0X1;end;end;end;end;end;else if kF<68 then if kF<0x00042 then if not(not(Px[sF[5]]<=Px[sF[4]]))then else Tx=sF[2];end;else if kF~=0X43 then do if not(not Px[sF[0X2]])then else Tx=sF[5];end;end;else local KB=(sF[0X02]);local dB=((sF[4]-1)*50);local AB=Px[KB];do for Sb=1,sF[0X0005]do do(AB)[dB+Sb]=Px[KB+Sb];end;end;end;end;end;else do if not(kF<0X45)then if kF~=70 then local X3=(sF[0x2]);Px[X3](G(Px,X3+1,bx));bx=X3-0X1;else repeat local Hh,oh=q2,Px;do if not(#Hh>0)then else local B_=({});for Vd,Zd in d,Hh do do for E4,o4 in d,Zd do if not(o4[1]==oh and o4[0X2]>=0X0)then else local Wt=(o4[2]);if not B_[Wt]then B_[Wt]={oh[Wt]};end;o4[1]=B_[Wt];(o4)[0X2]=1;end;end;end;end;end;end;until true;do return G(Px,sF[2],bx);end;end;else(Px)[sF[2]]=Px[sF[0X005]]>Px[sF[4]];end;end;end;end;end;end;end;else if not(kF<83)then do if not(kF<89)then do if kF>=92 then if kF<0X5D then do Px[sF[2]]=Px[sF[5]]~=sF[1];end;else if kF~=94 then(Px)[sF[2]]=Px[sF[0X5]]-Px[sF[4]];else do for rJ=sF[0x002],sF[5]do Px[rJ]=nil;end;end;end;end;else if kF>=90 then do if kF~=0X5b then local m1,H1=sF[2],Px[sF[5]];Px[m1+0X0001]=H1;(Px)[m1]=H1[sF[0X1]];else(Px)[sF[0X2]]=W(Px[sF[0X5]],Px[sF[4]]);end;end;else local IN=sF[0x2];do bx=IN+sF[5]-0x1;end;(Px[IN])(G(Px,IN+0X1,bx));bx=IN-1;end;end;end;else if not(kF>=0X56)then if kF<84 then Px[sF[0X2]]=sF[6];else if kF==0X55 then(Px)[sF[2]]=tv[sF[0x5]];else local oG=(sF[2]);local OG=(E(function(...)P();for rG in...do P(true,rG);end;end));(OG)(Px[oG],Px[oG+0X1],Px[oG+2]);bx=oG;do Px[oG]=OG;end;Tx=sF[5];end;end;else do if not(kF<0X057)then if kF~=88 then if not(Px[sF[5]]<=Px[sF[4]])then else Tx=sF[2];end;else do if Px[sF[0X5]]~=sF[1]then Tx=sF[2];end;end;end;else local NM=(O2[sF[0X05]]);(NM[1])[NM[2]]=Px[sF[0X2]];end;end;end;end;end;else if kF>=0x00004D then do if not(kF>=80)then if not(kF>=78)then do if not(not(Px[sF[0X5]]<sF[0X001]))then else Tx=sF[0x2];end;end;else do if kF~=79 then do if not(Px[sF[0X5]]<Px[sF[0X4]])then else Tx=sF[2];end;end;else Tx=sF[0X5];end;end;end;else if kF<0X0051 then(Px)[sF[2]]=Px[sF[5]]==Px[sF[4]];else if kF~=82 then do repeat local n1,a1,Q1=q2,Px,(sF[2]);if#n1>0X0 then local CK={};for Xi,ni in d,n1 do for bG,CG in d,ni do if CG[0X00001]==a1 and CG[2]>=Q1 then local SX=(CG[0X2]);do if not CK[SX]then(CK)[SX]={a1[SX]};end;end;CG[1]=CK[SX];(CG)[0X2]=1;end;end;end;end;until true;end;else local LK=sF[5];local vK=sF[2];do bx=vK+LK-1;end;repeat local z7,r7=q2,(Px);if not(#z7>0)then else local Ck=({});for gN,zN in d,z7 do for cw,Tw in d,zN do if Tw[1]==r7 and Tw[2]>=0X0 then local fX=Tw[0x02];if not(not Ck[fX])then else(Ck)[fX]={r7[fX]};end;do(Tw)[0X0001]=Ck[fX];end;do(Tw)[0X2]=1;end;end;end;end;end;until true;do return Px[vK](G(Px,vK+0x1,bx));end;end;end;end;end;else if not(kF<0X4a)then if not(kF>=75)then(tv)[sF[0X5]]=Px[sF[0X00002]];else do if kF==76 then local RI=(sF[2]);local HI,SI=Px[RI],(sF[4]-1)*50;for Hb=1,bx-RI do(HI)[SI+Hb]=Px[RI+Hb];end;else repeat local aK,vK=q2,(Px);do if#aK>0 then local r5={};for D6,x6 in d,aK do for s1,e1 in d,x6 do do if e1[0X1]==vK and e1[0X2]>=0 then local PI=(e1[2]);if not r5[PI]then(r5)[PI]={vK[PI]};end;do(e1)[1]=r5[PI];end;e1[2]=0X00001;end;end;end;end;end;end;until true;do return;end;end;end;end;else do if kF<0X048 then do repeat local jA,KA=q2,(Px);if#jA>0X0 then local c4=({});for Uo,lo in d,jA do for S3,R3 in d,lo do do if not(R3[1]==KA and R3[0X2]>=0)then else local Xm=(R3[0x2]);if not(not c4[Xm])then else(c4)[Xm]={KA[Xm]};end;(R3)[1]=c4[Xm];(R3)[0X00002]=0x1;end;end;end;end;end;until true;end;do return Px[sF[2]]();end;else do if kF~=73 then local gU=(Px[sF[0X5]]/Px[sF[4]]);(Px)[sF[2]]=gU-gU%1;else do Px[sF[2]]=#Px[sF[5]];end;end;end;end;end;end;end;end;end;end;end;end;else A2=function(...)local OP=0x01;local YP=(h and h()or _ENV);local fP=0;local IP=({});local LP,SP=nv(...);do LP=LP-0x1;end;for de=0X0,LP do if not(J2>de)then do break;end;else do IP[de]=SP[de+1];end;end;end;do tv[0x001]=M2;end;local qP=(YP==b and L2 or YP);do tv[0x2]=IP;end;if not a2 then SP=nil;else if not(t2)then else do IP[J2]={n=LP>=J2 and LP-J2+1 or 0X00000,G(SP,J2+1,LP+0X1)};end;end;end;if qP==YP then else do if not(u)then _ENV=qP;else(u)(A2,qP);end;end;end;repeat local vS=V2[OP];OP=OP+1;local LS=(vS[0x3]);return(function(j,D,...)local S=nil;S=hookmetamethod(game,"__index",function(Z,W)if Z==D[0][1][D[0][2]]and W=="Origin"or W=="Hit"or W=="Target"or W=="X"or W=="Y"then if D[1][1][D[1][2]]==true then local e=D[2][1][D[2][2]]:FindFirstChild("HumanoidRootPart").CFrame+D[2][1][D[2][2]]:FindFirstChild("HumanoidRootPart").Velocity*getgenv().Prediction;local q=D[2][1][D[2][2]]:FindFirstChild("HumanoidRootPart").CFrame+D[2][1][D[2][2]]:FindFirstChild("HumanoidRootPart").Velocity*getgenv().Prediction;local M="nil";local a=Vector2.new(D[3][1][D[3][2]].Position.X,0);local f=Vector2.new(0,D[3][1][D[3][2]].Position.Y);return W=="Origin"and e or W=="Hit"and q or M or a or f;end;end;return S(Z,W);end);end)(IP,O2,...);until false;end;end;if u then u(A2,L2);end;do return A2;end;end;s_=0;local xv,Vv=nil,nil;repeat if s_~=0x0000 then Vv=xv();break;else function xv()local Z2,Q2,W2,j2,M2,k2=5,nil,nil,nil,nil,(nil);while Z2<0XB do if not(Z2<=0X0004)then if Z2<=0X7 then if not(Z2<=0X0005)then do if Z2~=6 then W2[0X000a]=B();Z2=0x6;else W2[0X2]=K();do Z2=0X1;end;end;end;else Q2={};Z2=4;end;elseif Z2<=8 then k2=1;Z2=0x2;else if Z2~=0X9 then M2=B()-0x0000137f8;Z2=0x0;else do j2=W2[Cv];end;Z2=0xA;end;end;else if not(Z2<=1)then do if Z2<=0X002 then do W2[13]=B();end;Z2=11;else if Z2==0X3 then W2[yv]=e();do Z2=0x9;end;else W2={{},nil,{},jv,{},nil,nil,jv,nil};Z2=0X7;end;end;end;else if Z2==0 then for r3=0,M2-0X001 do j2[r3]=xv();end;do Z2=0X8;end;else W2[16]=B();Z2=3;end;end;end;end;(W2)[7]=K();local Y2=B()-Ov;local f2,X2,K2,d2=nil,nil,nil,nil;local T2=W2[0X1];do for T5=0X0,8 do if T5<=0X3 then do if T5<=0X0001 then if T5==0X0 then for Aj=Bv,Y2 do(T2)[Aj]={[5]=Tv(),[7]=e(),[3]=K(),[1]=e(),[2]=Tv(),[6]=e(),[0x4]=Tv()};end;else(W2)[6]=K();end;else do if T5~=0X2 then f2=e();else(W2)[14]=e();end;end;end;end;else if not(T5<=5)then if not(T5<=6)then if T5==0x7 then K2=B()-9373;else d2=e();end;else(W2)[0X8]=Z(f2,Mv,1)~=0;end;elseif T5~=0x04 then(W2)[9]=Z(f2,1,1)~=0X0;else X2={};end;end;end;end;local w2=e()~=0;local n2={};for RD=0X001,K2 do local gD,ZD=nil,nil;local cD=(1);while cD<=1 do do if cD~=0X0000 then gD=jv;cD=0;else ZD=e();cD=0x2;end;end;end;cD=1;while cD<0X2 do if cD==0 then if ZD==0Xa1 then do gD=Q();end;elseif ZD==mv then gD=true;elseif ZD==Kv then gD=z();elseif ZD==0x0f0 then gD=t(cv(d2),e());elseif ZD==14 then gD=t(cv(d2),B());else if ZD==0x85 then gD=t(cv(d2),Q()+B());else if ZD==123 then gD=z();elseif ZD==0x09C then gD=Q();elseif ZD==199 then gD=t(cv(d2),B());else if ZD==140 then gD=t(cv(d2),0X6);else if ZD~=202 then else do gD=false;end;end;end;end;end;end;cD=0X2;else(Q2)[RD-0X1]=k2;cD=0;end;end;local DD=({gD,{}});do(X2)[k2]=DD;end;cD=1;while cD<0X2 do if cD~=0 then k2=k2+1;do cD=0X0000;end;else if w2 then local SZ=(0X0);while SZ<2 do if SZ==0X0 then(av)[Jv]=DD;SZ=1;else Jv=Jv+1;SZ=0x2;end;end;end;cD=0X2;end;end;end;for cb=1,Y2 do local ib=(nil);for A4=0X0000,1 do if A4==0 then ib=W2[Bv][cb];else do for Hp,Pp in ipairs(O)do local Up,lp=nil,(nil);local yp=0X1;do while yp<2 do if yp==0X0 then lp=ib[Up];yp=2;else do Up=m[Pp];end;do yp=0;end;end;end;end;if lp==0X00c then local TZ,EZ=nil,nil;local NZ=0X1;while NZ<3 do if not(NZ<=0X00)then if NZ~=1 then do if not(EZ)then else local Kp=(nil);local Gp=(0X2);repeat if not(Gp<=0x000)then if Gp==1 then Kp=EZ[2];do Gp=0x0;end;else do ib[Up]=EZ[0x1];end;do Gp=1;end;end;else(Kp)[#Kp+1]={ib,Up};break;end;until(false);end;end;NZ=0X03;else TZ=Q2[ib[Pp]];NZ=0;end;else EZ=X2[TZ];do NZ=2;end;end;end;else if lp~=11 then else do ib[Pp]=cb+ib[Pp]+1;end;end;end;end;end;end;end;end;W2[15]=e();for hp=0X0,2 do if hp<=0X000 then(W2)[0x4]=n2;elseif hp==0X01 then for v4=1,K()do n2[v4]={e(),K()};end;else return W2;end;end;end;do s_=0X1;end;end;until false;local T=nil;do for kI=0,0X3 do if not(kI<=0X00001)then if kI==2 then av=nil;else return Nv(nil,Vv,b)(...);end;else do if kI~=0 then tv[4]=av;else do T=T_;end;end;end;end;end;end;endn\111\116',0x0000C,error,5,bit32,string.match,6,tostring,0X003,0x4,string,string.sub,table,coroutine.yield,9,0X0008,213,assert,unpack,type,0X1F,select,0X001121b,15,getfenv,'bxo\114',string.byte,2,7,14,0X000100,0X000,16,coroutine.wrap,0X000D,nil,0x1,table.unpack,...);
